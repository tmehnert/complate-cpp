name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  BUILD_TESTS: on
  BUILD_EXAMPLE: on

jobs:
  linux-build:
    name: Linux, ${{matrix.cc}}, ${{matrix.build_type}}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        cc:
          - gcc-7
          - gcc-8
          - gcc-9
          - gcc-10
          - clang-7
          - clang-8
          - clang-9
          - clang-10
          - clang-11
          - clang-12
        build_type: [Debug, Release]
        include:
          - cc: gcc-7
            cxx: g++-7
            package: g++-7
          - cc: gcc-8
            cxx: g++-8
            package: g++-8
          - cc: gcc-9
            cxx: g++-9
            package: g++-9
          - cc: gcc-10
            cxx: g++-10
            package: g++-10
          - cc: clang-7
            cxx: clang++-7
            package: clang-7
          - cc: clang-8
            cxx: clang++-8
            package: clang-8
          - cc: clang-9
            cxx: clang++-9
            package: clang-9
          - cc: clang-10
            cxx: clang++-10
            package: clang-10
          - cc: clang-11
            cxx: clang++-11
            package: clang-11
          - cc: clang-12
            cxx: clang++-12
            package: clang-12
    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: sudo apt-get install -y libv8-dev ${{matrix.package}}

      - name: Configure CMake
        env:
          CC: ${{matrix.cc}}
          CXX: ${{matrix.cxx}}
        run: |
          cmake -B ${{github.workspace}}/build \
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
            -DBUILD_TESTS=${{env.BUILD_TESTS}} \
            -DBUILD_EXAMPLE=${{env.BUILD_EXAMPLE}}

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build \
            --config ${{matrix.build_type}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{matrix.build_type}} --output-on-failure --no-tests=error

  windows-build:
    name: Windows, mingw-${{matrix.mingw}}, ${{matrix.build_type}}
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        mingw:
          - 8.5.0
        build_type: [ Debug, Release ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: C:\ProgramData\chocolatey\lib\mingw
          key: ${{runner.os}}-chocolatey-mingw-${{matrix.mingw}}

      - name: Install Dependencies
        run: choco upgrade mingw -y --version=${{matrix.mingw}} --no-progress --allow-downgrade

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build `
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} `
            -DBUILD_TESTS=${{env.BUILD_TESTS}} `
            -DBUILD_EXAMPLE=${{env.BUILD_EXAMPLE}} `
            -DBUILD_V8_RENDERER=off `
            -G "MinGW Makefiles"

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build `
            --config ${{matrix.build_type}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run:  .\test\lib\complate-tests.exe --order lex
